{"version":3,"sources":["Ball.js","Lotto.js","index.js"],"names":["Ball","memo","background","number","className","style","backgroundColor","getWinNumbers","balls","Array","fill","map","v","i","shuffle","length","push","splice","Math","floor","random","bonus","winBalls","slice","sort","a","b","Lotto","lottoNumbers","useMemo","useState","winNumbers","setWinNumbers","setWinBalls","setBonus","redo","setRedo","timeouts","useRef","useEffect","current","setTimeout","prevWinBalls","forEach","clearTimeout","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAuBeA,EApBFC,gBAAK,YAAiB,IAC7BC,EADeC,EAAa,EAAbA,OAanB,OAVED,EADEC,EAAS,GACE,YACJA,EAAS,GACL,cACJA,EAAS,GACL,gBACJA,EAAS,GACL,YAEA,WAGb,qBAAKC,UAAU,OAAOC,MAAO,CAAEC,gBAAiBJ,GAAhD,SACGC,O,MCdP,SAASI,IAKP,IAJA,IAAMC,EAAQC,MAAM,IACjBC,OACAC,KAAI,SAACC,EAAGC,GAAJ,OAAUA,EAAI,KACfC,EAAU,GACTN,EAAMO,OAAS,GACpBD,EAAQE,KAAKR,EAAMS,OAAOC,KAAKC,MAAMD,KAAKE,SAAWZ,EAAMO,QAAS,GAAG,IAEzE,IAAMM,EAAQP,EAAQA,EAAQC,OAAS,GACjCO,EAAWR,EAAQS,MAAM,EAAG,GAAGC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAExD,MAAM,GAAN,mBAAWJ,GAAX,CAAqBD,IAGvB,IAsDeM,EAtDD,WACZ,IAAMC,EAAeC,mBAAQ,kBAAMtB,MAAiB,IACpD,EAAoCuB,mBAASF,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOR,EAAP,KAAiBW,EAAjB,KACA,EAA0BH,mBAAS,MAAnC,mBAAOT,EAAP,KAAca,EAAd,KACA,EAAwBJ,oBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACMC,EAAWC,iBAAO,IAExBC,qBAAU,WACR,IADe,IAAD,WACL1B,GACPwB,EAASG,QAAQ3B,GAAK4B,YAAW,WAC/BR,GAAY,SAACS,GAAD,4BAAsBA,GAAtB,CAAoCX,EAAWlB,UAChD,KAATA,EAAI,KAHDA,EAAI,EAAGA,EAAIkB,EAAWhB,OAAS,EAAGF,IAAM,EAAxCA,GAST,OAJAwB,EAASG,QAAQ,GAAKC,YAAW,WAC/BP,EAASH,EAAW,IACpBK,GAAQ,KACP,KACI,WACLC,EAASG,QAAQG,SAAQ,SAAC/B,GACxBgC,aAAahC,SAGhB,CAACmB,IAUJ,OACE,sBAAK3B,UAAU,MAAf,UACE,sBAAKA,UAAU,YAAf,UACE,+CACA,qBAAKA,UAAU,QAAf,SACGkB,EAASX,KAAI,SAACC,GAAD,OACZ,cAAC,EAAD,CAAcT,OAAQS,GAAXA,WAIjB,sBAAKR,UAAU,YAAf,UACE,uCACA,qBAAKA,UAAU,QAAf,SACGiB,GAAS,cAAC,EAAD,CAAkBlB,OAAQkB,GAAfA,QAGxBc,GAAQ,wBAAQU,QAxBD,WAClBb,EAAczB,KACd0B,EAAY,IACZC,EAAS,MACTE,GAAQ,GACRC,EAASG,QAAU,IAmBR,yB,MC9DfM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fa114752.chunk.js","sourcesContent":["import React, { memo } from 'react';\r\nimport './Ball.css';\r\n\r\nconst Ball = memo(({ number }) => {\r\n  let background;\r\n  if (number < 10) {\r\n    background = 'lightpink';\r\n  } else if (number < 20) {\r\n    background = 'navajowhite';\r\n  } else if (number < 30) {\r\n    background = 'lightseagreen';\r\n  } else if (number < 40) {\r\n    background = 'lightblue';\r\n  } else {\r\n    background = 'lavender';\r\n  }\r\n  return (\r\n    <div className=\"ball\" style={{ backgroundColor: background }}>\r\n      {number}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Ball;\r\n","import React, { useState, useRef, useEffect, useMemo } from 'react';\r\nimport Ball from './Ball';\r\nimport './Lotto.css';\r\n\r\nfunction getWinNumbers() {\r\n  const balls = Array(45)\r\n    .fill()\r\n    .map((v, i) => i + 1);\r\n  const shuffle = [];\r\n  while (balls.length > 0) {\r\n    shuffle.push(balls.splice(Math.floor(Math.random() * balls.length), 1)[0]);\r\n  }\r\n  const bonus = shuffle[shuffle.length - 1];\r\n  const winBalls = shuffle.slice(0, 6).sort((a, b) => a - b);\r\n\r\n  return [...winBalls, bonus];\r\n}\r\n\r\nconst Lotto = () => {\r\n  const lottoNumbers = useMemo(() => getWinNumbers(), []);\r\n  const [winNumbers, setWinNumbers] = useState(lottoNumbers);\r\n  const [winBalls, setWinBalls] = useState([]);\r\n  const [bonus, setBonus] = useState(null);\r\n  const [redo, setRedo] = useState(false);\r\n  const timeouts = useRef([]);\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < winNumbers.length - 1; i++) {\r\n      timeouts.current[i] = setTimeout(() => {\r\n        setWinBalls((prevWinBalls) => [...prevWinBalls, winNumbers[i]]);\r\n      }, (i + 1) * 1000);\r\n    }\r\n    timeouts.current[6] = setTimeout(() => {\r\n      setBonus(winNumbers[6]);\r\n      setRedo(true);\r\n    }, 7000);\r\n    return () => {\r\n      timeouts.current.forEach((v) => {\r\n        clearTimeout(v);\r\n      });\r\n    };\r\n  }, [winNumbers]);\r\n\r\n  const onClickRedo = () => {\r\n    setWinNumbers(getWinNumbers());\r\n    setWinBalls([]);\r\n    setBonus(null);\r\n    setRedo(false);\r\n    timeouts.current = [];\r\n  };\r\n\r\n  return (\r\n    <div className=\"box\">\r\n      <div className=\"lotto-box\">\r\n        <h1>Lucky Numbers</h1>\r\n        <div className=\"lotto\">\r\n          {winBalls.map((v) => (\r\n            <Ball key={v} number={v} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className=\"bonus-box\">\r\n        <h1>Bonus</h1>\r\n        <div className=\"bonus\">\r\n          {bonus && <Ball key={bonus} number={bonus} />}\r\n        </div>\r\n      </div>\r\n      {redo && <button onClick={onClickRedo}>restart</button>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lotto;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Lotto from './Lotto';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Lotto />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}